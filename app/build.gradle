buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-kapt'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    mavenCentral()
}

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.0'
    defaultConfig {
        applicationId "com.onwordiesquire.mobile.marvelapp"
        minSdkVersion 19
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "${applicationId}.runner.RxAndroidJUnitRunner"

        buildConfigField 'String', 'PUBLIC_API_KEY_MARVEL', '"342ea1c3df031e31621f83a3815970e9"'
        buildConfigField 'String', 'PRIVATE_API_KEY_MARVEL', '"bd18e6bd38931dc0ccd9bdae0df2ae0b2378a285"'

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        def commonTestDir = 'src/commonTest/Java'

        test {
            java.srcDir commonTestDir
        }

        androidTest {
            java.srcDir commonTestDir
        }
    }


    buildTypes {

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            buildConfigField 'String', 'ENDPOINT', '"http://gateway.marvel.com:80/v1/public/"'
        }
    }
}
//
//kapt {
//    generateStubs = true
//}

dependencies {
    final AUTO_VALUE_VERSION = "1.2"
    final RETROFIT_VERSION = '2.1.0'
    final DAGGER_VERSION = '2.11'
    final HAMCREST_VERSION = '1.3'
    final RUNNER_VERSION = "0.5"
    final DEXMAKER_VERSION = "1.4"
    final SUPPORT_LIBRARY_VERSION = "25.3.1"
    final ESPRESSO_VERSION = "2.2.2"

    def junit = "junit:junit:4.12"
    def mockito = "org.mockito:mockito-core:1.10.19"
    def daggerCompiler = "com.google.dagger:dagger-compiler:$DAGGER_VERSION"


    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
    implementation "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:adapter-rxjava:$RETROFIT_VERSION"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.6.0'
    implementation 'com.squareup.sqlbrite:sqlbrite:0.7.0'
    implementation 'commons-codec:commons-codec:1.5'
    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.jakewharton.timber:timber:4.5.1'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation "com.android.support:palette-v7:$SUPPORT_LIBRARY_VERSION"
    implementation "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"

    implementation junit
    implementation mockito

    //unit testing dependencies
    testCompile junit
    testCompile mockito
    testCompile "org.hamcrest:hamcrest-core:$HAMCREST_VERSION"
    testCompile "org.hamcrest:hamcrest-library:$HAMCREST_VERSION"
    testCompile "org.hamcrest:hamcrest-integration:$HAMCREST_VERSION"

    //instrumentation test dependencies
    androidTestImplementation junit
    androidTestImplementation mockito
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"
    androidTestImplementation("com.android.support.test.espresso:espresso-contrib:$ESPRESSO_VERSION") {
        exclude group: 'com.android.support'

    }
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$ESPRESSO_VERSION")
        {
            exclude group: 'com.android.support'

        }
    androidTestImplementation("com.android.support.test:runner:$RUNNER_VERSION")
        {
            exclude group: 'com.android.support'

        }
    androidTestImplementation("com.android.support.test:rules:$RUNNER_VERSION")
        {
            exclude group: 'com.android.support'

        }
    androidTestImplementation "com.crittercism.dexmaker:dexmaker:$DEXMAKER_VERSION"
    androidTestImplementation "com.crittercism.dexmaker:dexmaker-dx:$DEXMAKER_VERSION"
    androidTestImplementation "com.crittercism.dexmaker:dexmaker-mockito:$DEXMAKER_VERSION"

    //butterknife
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    //autovalue dependencies
    // Replace provided dependency below with official AutoValue once this issue is fixed
    // https://github.com/google/auto/issues/268
    provided 'com.jakewharton.auto.value:auto-value-annotations:1.3'
    provided 'com.ryanharter.auto.value:auto-value-gson:0.4.2'
    annotationProcessor "com.google.auto.value:auto-value:$AUTO_VALUE_VERSION"
    annotationProcessor 'com.ryanharter.auto.value:auto-value-parcel:0.2.5'
    annotationProcessor 'com.ryanharter.auto.value:auto-value-gson:0.4.2'
    annotationProcessor 'com.squareup:javapoet:1.9.0' // https://github
    // .com/rharter/auto-value-parcel/issues/64

    //dagger dependencies
    annotationProcessor "com.google.dagger:dagger-android-processor:$DAGGER_VERSION"
    compile "com.google.dagger:dagger-android-support:$DAGGER_VERSION"
    implementation "com.google.dagger:dagger:$DAGGER_VERSION"
    provided 'javax.annotation:jsr250-api:1.0'
    kaptTest daggerCompiler
    kaptAndroidTest daggerCompiler
    kapt daggerCompiler

    //rxjava
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'io.reactivex:rxjava:1.2.9'
    implementation 'com.jakewharton.rxbinding:rxbinding:1.0.1'

    testCompile junit
    implementation "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION"
    implementation "com.android.support:design:$SUPPORT_LIBRARY_VERSION"
    implementation('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
        transitive = true;
    }
    android.defaultConfig.javaCompileOptions.annotationProcessorOptions.includeCompileClasspath =
        true
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
}


apply plugin: 'kotlin-android-extensions'